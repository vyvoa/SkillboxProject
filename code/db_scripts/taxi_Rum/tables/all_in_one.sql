--start table taxi_Rum.car_color
create table taxi_Rum.car_color (
                        id              int generated by default as identity start with 1 increment by 1 not null, -- color_id
                        color           varchar2(20) not null,
                        primary key (id)
                    );
comment on column taxi_Rum.car_color.id is 'color_id';


insert into  taxi_Rum.car_color ( color) values ( 'White');
insert into  taxi_Rum.car_color ( color) values ( 'Black');
insert into  taxi_Rum.car_color ( color) values ( 'Grey');
insert into  taxi_Rum.car_color ( color) values ( 'Red');
insert into  taxi_Rum.car_color ( color) values ( 'Blue');
insert into  taxi_Rum.car_color ( color) values ( 'Yellow');
insert into  taxi_Rum.car_color ( color) values ( 'Green');

commit;
--drop table taxi_Rum.car_color;
-- select * from taxi_Rum.car_color;
-- end table taxi_Rum.car_color

--start table taxi_Rum.payment_type
create table taxi_Rum.payment_type (
                        id                  int not null, -- payment_type_id
                        type_name           varchar2(8),
                        time_create         timestamp default current_timestamp not null,
                        primary key(id)
                    );
comment on column taxi_Rum.payment_type.id is 'payment_type_id';

insert  all 
    into taxi_Rum.payment_type (id, type_name) values (1, 'card')
    into taxi_Rum.payment_type (id, type_name) values (2, 'cash')
select * from dual;
commit;
-- end table taxi_Rum.payment_type

--start table taxi_Rum.driver
create table taxi_Rum.driver (
                        id                  int generated by default as identity start with 1001 increment by 1 not null, -- driver_id
                        name                varchar2(255) not null,
                        age                 smallint,
                        phone_number        varchar2(50) not null,
                        percent_of_payment  decimal(4,2) not null,
                        registration_date   date not null,
                        time_create         timestamp default current_timestamp not null,
                        primary key(id)
                    );
comment on column taxi_Rum.driver.id is 'driver_id';
comment on column taxi_Rum.driver.percent_of_payment is 'percent of payment for driver in format like 90.00';

--insert into  taxi_Rum.driver ( name, age, phone_number, percent_of_payment, registration_date) values ( 'Vladimir', 24, '+79885819542', 88.23, date'2024-03-01');
--insert into  taxi_Rum.driver ( name, age, phone_number, percent_of_payment, registration_date) values ( 'Michail',  32, '+79888979797', 92.10, date'2024-02-01');
--insert into  taxi_Rum.driver ( name, age, phone_number, percent_of_payment, registration_date) values ( 'Aleksey',  27, '+79888172634', 86.00, date'2024-01-01');
--insert into  taxi_Rum.driver ( name, age, phone_number, percent_of_payment, registration_date) values ( 'Artem',    30, '+79917272347', 85.00, date'2024-03-02');
--insert into  taxi_Rum.driver ( name, age, phone_number, percent_of_payment, registration_date) values ( 'Shrek',    55, '+79829372673', 93.21, date'2024-03-03');

commit;
--drop table taxi_Rum.driver;
--select * from taxi_Rum.driver;
-- end table taxi_Rum.driver

--start table taxi_Rum.currency
create table taxi_Rum.currency (
                        id                  int generated by default as identity start with 1 increment by 1 not null, -- currency_id
                        name                varchar2(50) not null,
                        abbrevation         varchar2(8) not null,
                        time_create         timestamp default current_timestamp not null,
                        primary key(id)
                    );
comment on column taxi_Rum.currency.id is 'currency_id';


--insert    into taxi_Rum.currency ( name, abbrevation) values ( 'Rubles',         'RUB');
--insert    into taxi_Rum.currency ( name, abbrevation) values ( 'Tenge',          'KZT');
--insert    into taxi_Rum.currency ( name, abbrevation) values ( 'Somoni',         'TJS');
--insert    into taxi_Rum.currency ( name, abbrevation) values ( 'Belarus Rubles', 'Br');
--insert    into taxi_Rum.currency ( name, abbrevation) values ( 'Som',            'KGS');

commit;
-- end table taxi_Rum.currency

--start table taxi_Rum.rate
create table taxi_Rum.rate (
                        id                  int generated by default as identity start with 1 increment by 1 not null, -- rate_id
                        currency1_id        int not null,
                        currency2_id        int not null,
                        rate                decimal(5,2) not null,
                        time_create         timestamp default current_timestamp not null,
                        primary key(id),
                        foreign key(currency1_id) references taxi_Rum.currency,
                        foreign key(currency2_id) references taxi_Rum.currency
                    );
comment on column taxi_Rum.rate.id is 'rate_id';

--insert    into taxi_Rum.rate ( currency1_id, currency2_id, rate) values ( 1, 1, 1);
--insert    into taxi_Rum.rate ( currency1_id, currency2_id, rate) values ( 1, 2, 12.2);
--insert    into taxi_Rum.rate ( currency1_id, currency2_id, rate) values ( 1, 3, 18.31);
--insert    into taxi_Rum.rate ( currency1_id, currency2_id, rate) values ( 1, 4, 26.37);
--insert    into taxi_Rum.rate ( currency1_id, currency2_id, rate) values ( 1, 5, 0.88);
commit;
-- end table taxi_Rum.rate

--start table taxi_Rum.payment
create table taxi_Rum.payment (
                        id                  int generated by default as identity start with 31 increment by 1 not null, -- payment_id
                        amount_to_paid      number not null,
                        currency_id         int not null,
                        type                int not null,
                        time_create         timestamp default current_timestamp not null,
                        primary key(id),
                        foreign key(currency_id) references taxi_Rum.currency,
                        foreign key(type) references taxi_Rum.payment_type
                    );
comment on column taxi_Rum.payment.id is 'payment_id';
comment on column taxi_Rum.payment.type is '1 - card 2 - cash';

/*
insert    into taxi_Rum.payment ( amount_to_paid, currency_id, type) values ( 432.26, 1, 1);
insert    into taxi_Rum.payment ( amount_to_paid, currency_id, type) values ( 18.5, 3, 2);
insert    into taxi_Rum.payment ( amount_to_paid, currency_id, type) values ( 98.0, 2, 1);
insert    into taxi_Rum.payment ( amount_to_paid, currency_id, type) values ( 115.63, 4, 2);
insert    into taxi_Rum.payment ( amount_to_paid, currency_id, type) values ( 188.30, 5, 1);
*/
commit;

-- end table taxi_Rum.payment

--start table taxi_Rum.country
create table taxi_Rum.country (
                        id              int generated by default as identity start with 1 increment by 1 not null, -- country_id
                        name            varchar2(255) not null,
                        time_create     timestamp default current_timestamp not null,
                        primary key(id)
                    );
comment on column taxi_Rum.country.id is 'country_id';

--insert    into taxi_Rum.country ( name) values ( 'Russian Federation');
--insert    into taxi_Rum.country ( name) values ( 'Kazakhstan');
--insert    into taxi_Rum.country ( name) values ( 'Tajikistan');
--insert    into taxi_Rum.country ( name) values ( 'Belarus');
--insert    into taxi_Rum.country ( name) values ( 'Kyrgyzstan');
commit;
-- drop table taxi_Rum.country;
-- end table taxi_Rum.country

--start table taxi_Rum.currency2country
create table taxi_Rum.currency2country (
                        currency_id         int not null, 
                        country_id          int not null,
                        time_create         timestamp default current_timestamp not null,
                        foreign key(currency_id) references taxi_Rum.currency,
                        foreign key(country_id) references taxi_Rum.country
                    );
/*                    
insert all
    into taxi_Rum.currency2country (currency_id, country_id) values (1, 1)
    into taxi_Rum.currency2country (currency_id, country_id) values (2, 2)
    into taxi_Rum.currency2country (currency_id, country_id) values (3, 3)
    into taxi_Rum.currency2country (currency_id, country_id) values (4, 4)
    into taxi_Rum.currency2country (currency_id, country_id) values (5, 5)
select * from dual;*/
commit;
-- end table taxi_Rum.currency2country

--start table taxi_Rum.city
create table taxi_Rum.city (
                        id              int generated by default as identity start with 1 increment by 1 not null, -- city_id
                        name            varchar2(255) not null,
                        country_id      int not null,
                        time_create     timestamp default current_timestamp not null,
                        primary key(id),
                        foreign key (country_id) references taxi_Rum.country
                    );
comment on column taxi_Rum.city.id is 'city_id';

--insert    into taxi_Rum.city ( name, country_id) values ( 'Moscow',   1);
--insert    into taxi_Rum.city ( name, country_id) values ( 'Astana',   2);
--insert    into taxi_Rum.city ( name, country_id) values ( 'Dushanbe', 3);
--insert    into taxi_Rum.city ( name, country_id) values ( 'Minsk',    4);
--insert    into taxi_Rum.city ( name, country_id) values ( 'Bishkek',  5);
commit;
-- end table taxi_Rum.city

--start table taxi_Rum.street
create table taxi_Rum.street (
                        id              int generated by default as identity start with 1 increment by 1 not null, -- street_id
                        name            varchar2(255) not null,
                        city_id         int not null,
                        time_create     timestamp default current_timestamp not null,
                        primary key (id),
                        foreign key (city_id) references taxi_Rum.city
                    );
comment on column taxi_Rum.street.id is 'street_id';
--insert    into taxi_Rum.street ( name, city_id) values ( 'Pobedy',     1);
--insert    into taxi_Rum.street ( name, city_id) values ( 'Tolaguy',    2);
--insert    into taxi_Rum.street ( name, city_id) values ( 'Borbad',     3);
--insert    into taxi_Rum.street ( name, city_id) values ( 'Jukovskogo', 4);
--insert    into taxi_Rum.street ( name, city_id) values ( 'Troitskaya', 5);
commit;
-- end table taxi_Rum.street

-- start table taxi_Rum.address
create table taxi_Rum.address (
                        id              int generated by default as identity start with 1 increment by 1 not null, -- address_id
                        house_number    int not null,
                        street_id       int not null,
                        time_create     timestamp default current_timestamp not null,
                        primary key (id),
                        foreign key (street_id) references taxi_Rum.street
                    );
comment on column taxi_Rum.address.id is 'address_id';


--insert    into taxi_Rum.address ( house_number, street_id) values ( 10, 1);
--insert    into taxi_Rum.address ( house_number, street_id) values ( 12, 2);
--insert    into taxi_Rum.address ( house_number, street_id) values ( 20, 3);
--insert    into taxi_Rum.address ( house_number, street_id) values ( 32, 4);
--insert    into taxi_Rum.address ( house_number, street_id) values ( 16, 5);
commit;
-- end table taxi_Rum.address

--start table taxi_Rum.parking
create table taxi_Rum.parking (
                        id              int generated by default as identity start with 1 increment by 1 not null, -- parking_id
                        number1         int not null UNIQUE,
                        address_id      int not null,
                        time_create     timestamp default current_timestamp not null,
                        primary key (id),
                        foreign key(address_id) references taxi_Rum.address
                    );
comment on column taxi_Rum.parking.id is 'parking_id';

--insert    into taxi_Rum.parking ( number1, address_id) values ( 10, 1);
--insert    into taxi_Rum.parking ( number1, address_id) values ( 8,  2);
--insert    into taxi_Rum.parking ( number1, address_id) values ( 3,  3);
--insert    into taxi_Rum.parking ( number1, address_id) values ( 12, 4);
--insert    into taxi_Rum.parking ( number1, address_id) values ( 16, 5);
commit;
-- end table taxi_Rum.parking

--start table taxi_Rum.car
create table taxi_Rum.car (
                        id              int generated by default as identity start with 1 increment by 1 not null, -- parking_id
                        brand           varchar2(50),
                        model           varchar2(50),
                        color_id        int not null,
                        is_reserved     smallint not null, --boolean 1-true 0-false
                        state_number    varchar2(50) not null unique,
                        parking_id      int not null,
                        mileage         number not null,
                        time_create     timestamp default current_timestamp not null,
                        primary key (id),
                        foreign key(color_id) references taxi_Rum.car_color,
                        foreign key(parking_id) references taxi_Rum.parking
                    );
comment on column taxi_Rum.car.id is 'car_id';
comment on column taxi_Rum.car.is_reserved is 'boolean 1-true 0-false'; 

--insert    into taxi_Rum.car ( brand, model, color_id, is_reserved, state_number, parking_id, mileage) values ( 'Mitsubishi', 'Lancer Evolution VIII', 6, 0, 'H235CB', 1, 23000);
--insert    into taxi_Rum.car ( brand, model, color_id, is_reserved, state_number, parking_id, mileage) values ( 'Lada',       'Granta',                7, 0, 'A032MM', 1, 16000);
--insert    into taxi_Rum.car ( brand, model, color_id, is_reserved, state_number, parking_id, mileage) values ( 'Renault',    'Logan',                 5, 0, 'B422TT', 1, 7000);
--insert    into taxi_Rum.car ( brand, model, color_id, is_reserved, state_number, parking_id, mileage) values ( 'Ford',       'Focus',                 3, 0, 'A076MT', 1, 23000);
--insert    into taxi_Rum.car ( brand, model, color_id, is_reserved, state_number, parking_id, mileage) values ( 'BMW',        'X5',                    2, 0, 'X777XX', 1, 5000);
commit;
-- end table taxi_Rum.car

--start table taxi_Rum.rent
create table taxi_Rum.rent (
                        id              int generated by default as identity start with 9 increment by 1 not null, -- rent_id
                        driver_id       int not null,
                        car_id          int not null,
                        date_start      date default current_timestamp not null,
                        date_stop       date,                        
                        gas_mileage     decimal,
                        distance        number,
                        time_create     timestamp default current_timestamp not null,
                        primary key (id),
                        foreign key(driver_id) references taxi_Rum.driver,
                        foreign key(car_id) references taxi_Rum.car
                    );
comment on column taxi_Rum.rent.id is 'rent_id';

--insert into taxi_Rum.rent (driver_id, car_id, date_start, date_stop, gas_mileage, distance) values (1001, 1, date'2024-03-04', date'2024-03-04', 15, 150);
--insert into taxi_Rum.rent (driver_id, car_id, date_start, date_stop, gas_mileage, distance) values (1002, 2, date'2024-02-11', date'2024-02-11', 18, 92);
--insert into taxi_Rum.rent (driver_id, car_id, date_start, date_stop, gas_mileage, distance) values (1003, 3, date'2024-01-01', date'2024-01-01', 15, 10);
--insert into taxi_Rum.rent (driver_id, car_id, date_start, date_stop, gas_mileage, distance) values (1004, 4, date'2024-03-03', date'2024-03-03', 16, 25);
--insert into taxi_Rum.rent (driver_id, car_id, date_start, date_stop, gas_mileage, distance) values (1005, 5, date'2024-03-04', date'2024-03-04', 22, 70);
commit;
-- end table taxi_Rum.rent

--start table taxi_Rum.driver_image
create table taxi_Rum.driver_image (
                        id              int not null, -- driver_id
                        image           clob,
                        time_create     timestamp default current_timestamp not null,
                        foreign key(id) references taxi_Rum.driver
                    );
comment on column taxi_Rum.driver_image.id is 'driver_id';
-- end table taxi_Rum.driver_image

--start table taxi_Rum.driver_rating
create table taxi_Rum.driver_rating (
                        id              int not null, -- driver_id
                        rating          decimal(3,2),
                        time_create     timestamp default current_timestamp not null,
                        foreign key(id) references taxi_Rum.driver
                    );
comment on column taxi_Rum.driver_rating.id is 'driver_id';
/*
insert all
    into taxi_Rum.driver_rating (id, rating) values (1001, 4.8)
    into taxi_Rum.driver_rating (id, rating) values (1002, 4.94)
    into taxi_Rum.driver_rating (id, rating) values (1003, 4.72)
    into taxi_Rum.driver_rating (id, rating) values (1004, 3.8)
    into taxi_Rum.driver_rating (id, rating) values (1005, 5.0)
select * from dual;*/
commit;
-- end table taxi_Rum.driver_rating

--start table taxi_Rum.passenger
create table taxi_Rum.passenger (
                                    id                  int generated by default as identity start with 1 increment by 1 not null, -- passenger id
                                    is_anonimous        smallint not null, --boolean 1-true 0-false
                                    name                varchar2(255),
                                    age                 smallint,
                                    home_address_id     int,
                                    phone_number        varchar2(50) not null,
                                    is_male             smallint, --boolean 1-true 0-false
                                    time_create         timestamp default current_timestamp not null,
                                    primary key (id),
                                    foreign key (home_address_id) references taxi_Rum.address
);
comment on column taxi_Rum.passenger.id is 'passenger id';
comment on column taxi_Rum.passenger.is_anonimous is 'boolean 1-true 0-false'; 
comment on column taxi_Rum.passenger.is_male is 'boolean 1-true 0-false null - undefined'; 

--insert    into taxi_Rum.passenger ( is_anonimous, name, age, home_address_id, phone_number, is_male) values ( 0, 'Dmitriy', 21, 1, '+79885819542', 0);
--insert    into taxi_Rum.passenger ( is_anonimous, name, age, home_address_id, phone_number, is_male) values ( 0, 'Maria',   23, 2, '+78986565882', 1);
--insert    into taxi_Rum.passenger ( is_anonimous, name, age, home_address_id, phone_number, is_male) values ( 0, 'Katerina',21, 3, '+77984658566', 1);
--insert    into taxi_Rum.passenger ( is_anonimous, name, age, home_address_id, phone_number, is_male) values ( 0, 'Artur',   32, 4, '+74894946598', 0);
--insert    into taxi_Rum.passenger ( is_anonimous, name, age, home_address_id, phone_number, is_male) values ( 0, 'Eugeniy', 21, 5, '+76586589988', 0);
commit;

-- end taxi_Rum.passenger

--start table taxi_Rum.passanger_image
create table taxi_Rum.passanger_image (
                        id              int not null, -- passanger_id
                        image           clob,
                        time_create     timestamp default current_timestamp not null,
                        foreign key (id) references taxi_Rum.passenger
                     );
comment on column taxi_Rum.passanger_image.id is 'passanger_id';
-- end table taxi_Rum.passanger_image

--start table taxi_Rum.passanger_rating
create table taxi_Rum.passanger_rating (
                        id                  int not null, -- passanger_id
                        rating              decimal(3,2),
                        time_create         timestamp default current_timestamp not null,
                        foreign key (id) references taxi_Rum.passenger
                    );
comment on column taxi_Rum.passanger_rating.id is 'passanger_id';
/*
insert all
    into taxi_Rum.passanger_rating (id, rating) values (1, 4.8)
    into taxi_Rum.passanger_rating (id, rating) values (2, 4.94)
    into taxi_Rum.passanger_rating (id, rating) values (3, 4.72)
    into taxi_Rum.passanger_rating (id, rating) values (4, 3.8)
    into taxi_Rum.passanger_rating (id, rating) values (5, 5.0)
select * from dual;*/
commit;
-- end table taxi_Rum.passanger_rating

--start table taxi_Rum.order_status
create table taxi_Rum.order_status (
                        id                  int not null, -- order_id
                        status_name         varchar2(32),
                        time_create         timestamp default current_timestamp not null,
                        primary key(id)
                    );
comment on column taxi_Rum.order_status.id is 'order_status_id';

insert all
    into taxi_Rum.order_status (id, status_name) values (1, 'search_driver')
    into taxi_Rum.order_status (id, status_name) values (2, 'wait_driver')
    into taxi_Rum.order_status (id, status_name) values (3, 'wait_passenger')
    into taxi_Rum.order_status (id, status_name) values (4, 'trip_started')
    into taxi_Rum.order_status (id, status_name) values (5, 'wait_payment')
    into taxi_Rum.order_status (id, status_name) values (6, 'trip_completed')
    into taxi_Rum.order_status (id, status_name) values (7, 'canceled')
select * from dual;
commit;
-- end table taxi_Rum.order_status


--start table taxi_Rum.order
create table taxi_Rum.taxi_order (
                        id                      int generated by default as identity start with 16 increment by 1 not null, -- order_id
                        passenger_id            int not null,
                        driver_id               int,
                        time_create             timestamp default current_timestamp not null,
                        time_end                timestamp,
                        status_id               int not null,
                        payment_id              int not null,
                        end_trip_address        int,
                        average_driver_speed    decimal(5,1),
                        primary key(id),
                        foreign key(passenger_id) references taxi_Rum.passenger,
                        foreign key(driver_id) references taxi_Rum.driver, 
                        foreign key(payment_id) references taxi_Rum.payment,
                        foreign key(end_trip_address) references taxi_Rum.address,
                        foreign key(status_id) references taxi_Rum.order_status
                    );
comment on column taxi_Rum.taxi_order.id is 'order_id';

--insert    into taxi_Rum.taxi_order ( passenger_id, driver_id, time_end, status_id, payment_id, end_trip_address, average_driver_speed) values ( 1, 1001, null, 1, 1, 1, 62.2);
--insert    into taxi_Rum.taxi_order ( passenger_id, driver_id, time_end, status_id, payment_id, end_trip_address, average_driver_speed) values ( 2, 1002, null, 2, 2, 2, 55.0);
--insert    into taxi_Rum.taxi_order ( passenger_id, driver_id, time_end, status_id, payment_id, end_trip_address, average_driver_speed) values ( 3, 1003, null, 4, 3, 3, 48.6);
--insert    into taxi_Rum.taxi_order ( passenger_id, driver_id, time_end, status_id, payment_id, end_trip_address, average_driver_speed) values ( 4, 1004, null, 3, 4, 4, 68.3);
--insert    into taxi_Rum.taxi_order ( passenger_id, driver_id, time_end, status_id, payment_id, end_trip_address, average_driver_speed) values ( 5, 1005, null, 7, 5, 5, 43.3);
--insert    into taxi_Rum.taxi_order ( passenger_id, driver_id, time_end, status_id, payment_id, end_trip_address, average_driver_speed) values ( 1, 1002, null, 1, 1, 1, 63.2);
--insert    into taxi_Rum.taxi_order ( passenger_id, driver_id, time_end, status_id, payment_id, end_trip_address, average_driver_speed) values ( 1, 1002, null, 1, 1, 4, 63.2);

commit;
-- end table taxi_Rum.order

-- start table taxi_Rum.way
create table taxi_Rum.way (
                        id                  int generated by default as identity start with 16 increment by 1 not null, -- way_id
                        from_address_id     int not null,
                        to_address_id       int not null,
                        distance            decimal(5,1) not null,
                        order_id            int not null,
                        preview_way_id      int,
                        time_create         timestamp default current_timestamp not null,
                        primary key(id),
                        foreign key(from_address_id) references taxi_Rum.address,
                        foreign key(to_address_id) references taxi_Rum.address,
                        foreign key(order_id) references taxi_Rum.taxi_order,
                        foreign key(preview_way_id) references taxi_Rum.way
                        
                    );
comment on column taxi_Rum.way.id is 'way_id';
/*
insert    into taxi_Rum.way ( from_address_id, to_address_id, distance, order_id, preview_way_id) values ( 1, 2, 71, 1, null);
insert    into taxi_Rum.way ( from_address_id, to_address_id, distance, order_id, preview_way_id) values ( 2, 3, 80, 2, null);
insert    into taxi_Rum.way ( from_address_id, to_address_id, distance, order_id, preview_way_id) values ( 3, 4, 72, 3, null);
insert    into taxi_Rum.way ( from_address_id, to_address_id, distance, order_id, preview_way_id) values ( 4, 5, 98, 4, null);
insert    into taxi_Rum.way ( from_address_id, to_address_id, distance, order_id, preview_way_id) values ( 5, 1, 56, 5, null);*/
commit;

-- end table taxi_Rum.way

-- start table taxi_Rum.rating_passenger2driver
create table taxi_Rum.rating_passenger2driver (
                        id              int generated by default as identity start with 1 increment by 1 not null, -- rating_passenger2driver
                        passenger_id    int not null,
                        driver_id       int not null,
                        order_id        int not null,
                        rating          decimal(1),
                        time_create     timestamp default current_timestamp not null,
                        primary key(id),
                        foreign key(passenger_id) references taxi_Rum.passenger,
                        foreign key(driver_id) references taxi_Rum.driver,
                        foreign key(order_id) references taxi_Rum.taxi_order                      
                    );
comment on column taxi_Rum.rating_passenger2driver.id is 'rating_passenger2driver_id';
/*
insert    into taxi_Rum.rating_passenger2driver ( passenger_id, driver_id, order_id, rating) values ( 1, 1001, 1, 5);
insert    into taxi_Rum.rating_passenger2driver ( passenger_id, driver_id, order_id, rating) values ( 2, 1002, 2, 4);
insert    into taxi_Rum.rating_passenger2driver ( passenger_id, driver_id, order_id, rating) values ( 3, 1003, 3, 5);
insert    into taxi_Rum.rating_passenger2driver ( passenger_id, driver_id, order_id, rating) values ( 4, 1004, 4, 4);
insert    into taxi_Rum.rating_passenger2driver ( passenger_id, driver_id, order_id, rating) values ( 5, 1005, 5, 5);
*/
commit;
-- end table taxi_Rum.rating_passenger2driver

-- start table taxi_Rum.rating_driver2passenge
create table taxi_Rum.rating_driver2passenger (
                        id              int generated by default as identity start with 1 increment by 1 not null, -- rating_driver2passenge
                        passenger_id    int not null,
                        driver_id       int not null,
                        order_id        int not null,
                        rating          decimal,
                        time_create     timestamp default current_timestamp not null,
                        primary key(id),
                        foreign key(passenger_id) references taxi_Rum.passenger,
                        foreign key(driver_id) references taxi_Rum.driver,
                        foreign key(order_id) references taxi_Rum.taxi_order                       
                    );
comment on column taxi_Rum.rating_driver2passenger.id is 'rating_driver2passenge_id';
/*
insert    into taxi_Rum.rating_driver2passenger ( passenger_id, driver_id, order_id, rating) values ( 1, 1001, 1, 4);
insert    into taxi_Rum.rating_driver2passenger ( passenger_id, driver_id, order_id, rating) values ( 2, 1002, 2, 5);
insert    into taxi_Rum.rating_driver2passenger ( passenger_id, driver_id, order_id, rating) values ( 3, 1003, 3, 4);
insert    into taxi_Rum.rating_driver2passenger ( passenger_id, driver_id, order_id, rating) values ( 4, 1004, 4, 5);
insert    into taxi_Rum.rating_driver2passenger ( passenger_id, driver_id, order_id, rating) values ( 5, 1005, 5, 4);
*/
commit;
-- end table taxi_Rum.rating_passenger2driver

-- start table taxi_Rum.refueling
create table taxi_Rum.refueling (
                        id              int generated by default as identity start with 16 increment by 1 not null, -- refueling
                        driver_id       int not null,
                        car_id          int not null,
                        payment_id      int not null,
                        address_id      int not null,
                        amount_of_gas   decimal(5,2) not null,
                        time_create     timestamp default current_timestamp not null,
                        primary key(id),
                        foreign key(driver_id) references taxi_Rum.driver,
                        foreign key(car_id) references taxi_Rum.car,
                        foreign key(payment_id) references taxi_Rum.payment,
                        foreign key(address_id) references taxi_Rum.address
                    );
comment on column taxi_Rum.refueling.id is 'refueling_id';
/*
insert    into taxi_Rum.refueling ( driver_id, car_id, payment_id, address_id, amount_of_gas) values ( 1001, 1, 1, 2, 18.2);
insert    into taxi_Rum.refueling ( driver_id, car_id, payment_id, address_id, amount_of_gas) values ( 1002, 2, 2, 3, 22.6);
insert    into taxi_Rum.refueling ( driver_id, car_id, payment_id, address_id, amount_of_gas) values ( 1003, 3, 3, 4, 34.1);
insert    into taxi_Rum.refueling ( driver_id, car_id, payment_id, address_id, amount_of_gas) values ( 1004, 4, 4, 5, 12.5);
insert    into taxi_Rum.refueling ( driver_id, car_id, payment_id, address_id, amount_of_gas) values ( 1005, 5, 5, 1, 23.1);
*/
commit;
-- end table taxi_Rum.rating_passenger2driver




